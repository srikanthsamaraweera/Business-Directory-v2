generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model categories {
  id      Int     @id @unique(map: "id_UNIQUE") @default(autoincrement())
  name    String  @unique(map: "name_UNIQUE") @db.VarChar(45)
  remarks String? @db.VarChar(100)
}

model post {
  id          Int     @id @default(autoincrement())
  user_email  String? @db.VarChar(100)
  enabled     String  @default("NO") @db.VarChar(45)
  email       String  @db.VarChar(100)
  title       String  @db.VarChar(100)
  description String? @db.VarChar(1000)
  category    String  @default("Uncategorized") @db.VarChar(45)
  phone       String? @db.VarChar(20)
  image1      String? @db.VarChar(1000)
  image2      String? @db.VarChar(1000)
  image3      String? @db.VarChar(1000)
  map         String? @db.VarChar(450)
  address     String? @db.VarChar(100)
  district    String? @db.VarChar(45)
  city        String? @db.VarChar(45)
  users       users?  @relation(fields: [user_email], references: [email], onDelete: NoAction, onUpdate: NoAction, map: "aduser")

  @@index([user_email], map: "aduser_idx")
}

model users {
  id              Int               @id @default(autoincrement())
  email           String            @unique(map: "email_UNIQUE") @db.VarChar(100)
  password        String            @db.VarChar(450)
  post            post[]
  user_validation user_validation[]
}

model user_validation {
  id              Int    @id @default(autoincrement())
  email           String @db.VarChar(100)
  validationtoken String @db.VarChar(100)
  validated       Int    @default(0)
  users           users  @relation(fields: [email], references: [email], onDelete: Cascade, map: "mail")

  @@index([email], map: "mail_idx")
}

model temp_image {
  id        Int    @id @default(autoincrement())
  filename1 String @db.VarChar(200)
  posted    Int    @default(0)
}

model districts {
  id       Int    @id @default(autoincrement())
  district String @db.VarChar(45)
}
